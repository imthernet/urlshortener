version: '3.8'  # Always good to specify the version

services:
  write-service:
    build: encoder
    ports:
      - "8081:8080"
    depends_on:
      cassandra-db:
        condition: service_healthy
    
  read-service:
    build: decoder
    ports:
      - "8082:8080"
    depends_on:
      cassandra-db:
        condition: service_healthy

  remover-service:
    build: remover
    depends_on:
      cassandra-db:
        condition: service_healthy

  zookeeper:
    image: wurstmeister/zookeeper:3.4.6
    ports:
      - "2181:2181"

  kafka:
    image: wurstmeister/kafka:2.13-3.0.0
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9093,OUTSIDE://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9093,OUTSIDE://0.0.0.0:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181

  cassandra-db:
    image: cassandra:latest
    container_name: cassandra-db
    hostname: cassandra-db
    ports:
      - "9042:9042"
    environment:
      CASSANDRA_SEEDS: "cassandra-db"
      CASSANDRA_CLUSTER_NAME: SolarSystem
      CASSANDRA_DC: Mars
      CASSANDRA_RACK: West
      CASSANDRA_ENDPOINT_SNITCH: GossipingPropertyFileSnitch
      CASSANDRA_NUM_TOKENS: 128
    volumes:
      - cassandra-data:/var/lib/cassandra               # Using a named volume
      - ./cassandra.yaml:/etc/cassandra/cassandra.yaml
    healthcheck:
      test: [ "CMD", "cqlsh", "-e", "describe keyspaces" ]
      interval: 5s
      timeout: 5s
      retries: 60

volumes:  # This should be at the same level as 'services'
  cassandra-data:
    driver: local  # Optional: specifying the driver, default is 'local'

